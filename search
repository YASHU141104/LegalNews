<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>LegalLens - Law News</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    body { background: #f4f7fa; font-family: Arial, sans-serif; margin: 0; padding: 2em 10vw; }
    .logo-area { display: flex; align-items: center; margin-bottom: 1em; gap: 0.7em; }
    .logo { font-size: 2.3em; border-radius:50%; background:#244e86; color:#fff; width:2em; height:2em; display:inline-flex;align-items:center;justify-content:center; }
    .sitename { font-size: 1.7em; font-weight:700;color:#244e86; }
    #searchBar { width:340px; padding:1em; font-size:1.1em; border:2px solid #4670ab; border-radius: 8px; box-shadow:0 2px 14px #00336615; margin-bottom:2em; display:block; margin-left:auto; margin-right:auto; }
    #law-news { max-width:850px; margin-left:auto; margin-right:auto; }
    #law-news a { color:#1155cc;font-weight:500;text-decoration:underline;display:block;margin:0.3em 0 0.05em 0;font-size:1.10em; }
    .desc { color:#202020;font-size:0.98em;margin-bottom:0.8em; margin-top:0;padding-left:0.4em; line-height:1.6;}
  </style>
</head>
<body>
  <div class="logo-area">
    <span class="logo">⚖️</span>
    <span class="sitename">LegalLens</span>
  </div>
  <input type="text" id="searchBar" placeholder="Search news..." autocomplete="off" />
  <div id="law-news">Fetching news...</div>
  <script>
    const feeds = [
      { url: "https://www.barandbench.com/feed" },
      { url: "https://www.livelaw.in/rss/law" },
      { url: "https://www.scconline.com/blog/post/category/news/feed/" }
    ];
    const rss2json = url => `https://api.rss2json.com/v1/api.json?rss_url=${encodeURIComponent(url)}`;
    const STORAGE_KEY = "legallens_news";
    let allNews = [];

    function cleanDesc(desc) {
      if (!desc) return "";
      const text = desc.replace(/<[^>]+>/g, '').replace(/\s+/g, ' ').trim();
      return text.length > 180 ? text.slice(0, 180) + "..." : text;
    }
    function loadStoredNews() {
      let stored = [];
      try { stored = JSON.parse(localStorage.getItem(STORAGE_KEY) || "[]"); } catch (e) { stored = []; }
      return stored;
    }
    function storeNews(news) {
      let stored = loadStoredNews();
      const seen = new Set(stored.map(item => item.link));
      news.forEach(item => { if (!seen.has(item.link)) stored.push(item); });
      if (stored.length > 250) stored = stored.slice(stored.length - 250);
      localStorage.setItem(STORAGE_KEY, JSON.stringify(stored));
      return stored;
    }
    function renderNews(news) {
      if(news.length===0) {
        document.getElementById('law-news').innerHTML = "<p>No news found for your search.</p>";
        return;
      }
      document.getElementById('law-news').innerHTML = news.map(item =>
        `<a href="${item.link}" target="_blank">${item.title}</a>
         <div class="desc">${cleanDesc(item.description || item.content || "")}</div>`
      ).join("");
    }
    function fetchAndUpdate() {
      Promise.all(
        feeds.map(feed =>
          fetch(rss2json(feed.url))
          .then(res => res.json())
          .then(data =>
            (data.items || []).map(item => ({
              title: item.title,
              link: item.link,
              description: item.description || item.content || "",
              pubDate: item.pubDate
            }))
          )
          .catch(() => [])
        )
      ).then(results => {
        const freshNews = results.flat();
        allNews = storeNews(freshNews);
        allNews.sort((a, b) => new Date(b.pubDate||0) - new Date(a.pubDate||0));
        renderNews(allNews);
      }).catch(e => {
        document.getElementById('law-news').innerHTML = "Failed: " + e;
      });
    }

    allNews = loadStoredNews();
    renderNews(allNews);
    fetchAndUpdate();
    setInterval(fetchAndUpdate, 300000);

    document.getElementById('searchBar').addEventListener('input', function() {
      const q = this.value.trim().toLowerCase();
      if (!q) {
        renderNews(allNews);
        return;
      }
      const filtered = allNews.filter(
        item =>
          item.title.toLowerCase().includes(q)
          || (item.description && item.description.toLowerCase().includes(q))
      );
      renderNews(filtered);
    });
  </script>
</body>
</html>

